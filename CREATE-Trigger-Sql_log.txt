CREATE TABLE SQL_LOG (
  LOG_ID ID_TYPE NOT NULL,
  LOG_DESC DESC_TYPE,
  CREATE_DATE DATE_TYPE,
  CREATE_BY ID_TYPE,
  CREATE_NAME CODE_TYPE);


ALTER TABLE SQL_LOG ADD PRIMARY KEY (LOG_ID);


SET TERM ^ ;

CREATE TRIGGER SQL_LOG_BI FOR SQL_LOG
ACTIVE BEFORE INSERT
POSITION 0
AS
BEGIN
  /* Trigger body */
  NEW.LOG_ID  = GEN_ID (SQL_LOG_SEQ, 1);
END^

SET TERM ; ^

SET TERM ^ ;

CREATE TRIGGER BILLING_DOC_AD FOR BILLING_DOC
ACTIVE BEFORE DELETE
POSITION 0
AS
BEGIN 
INSERT INTO SQL_LOG (LOG_DESC,CREATE_DATE,CREATE_NAME) VALUES ('DELETE BILLING_DOC ' || OLD.DOCUMENT_NO,current_timestamp,old.MODIFY_NAME); 
END^

SET TERM ; ^


SET TERM ^ ;

CREATE TRIGGER BILLING_DOC_AU FOR BILLING_DOC
ACTIVE BEFORE UPDATE
POSITION 0
AS
BEGIN 
IF (NEW.DOCUMENT_NO <> OLD.DOCUMENT_NO) 
THEN INSERT INTO SQL_LOG (LOG_DESC,CREATE_DATE,CREATE_NAME) VALUES ('UPDATE BILLING_DOC ' || OLD.DOCUMENT_NO || '-->' || NEW.DOCUMENT_NO,NEW.MODIFY_DATE,NEW.MODIFY_NAME); 
END^

SET TERM ; ^

SET TERM ^ ;

CREATE TRIGGER INVENTORY_DOC_AD FOR INVENTORY_DOC
ACTIVE BEFORE DELETE
POSITION 0
AS
BEGIN
  /* Trigger body */
  INSERT INTO SQL_LOG (LOG_DESC,CREATE_DATE,CREATE_BY) VALUES ('DELETE INVENTORY_DOC ' || OLD.DOCUMENT_NO,current_timestamp,old.MODIFY_BY);
END^

SET TERM ; ^

SET TERM ^ ;

CREATE TRIGGER INVENTORY_DOC_AU FOR INVENTORY_DOC
ACTIVE BEFORE UPDATE
POSITION 0
AS
BEGIN
  /* Trigger body */
   IF (NEW.DOCUMENT_NO <> OLD.DOCUMENT_NO)
   THEN INSERT INTO SQL_LOG (LOG_DESC,CREATE_DATE,CREATE_BY) VALUES ('UPDATE INVENTORY_DOC ' || OLD.DOCUMENT_NO || '-->' || NEW.DOCUMENT_NO,NEW.MODIFY_DATE,NEW.MODIFY_BY);
END^

SET TERM ; ^

SET TERM ^ ;

CREATE TRIGGER JOB_AD FOR JOB
ACTIVE BEFORE DELETE
POSITION 0
AS
BEGIN
  /* Trigger body */
  INSERT INTO SQL_LOG (LOG_DESC,CREATE_DATE,CREATE_BY) VALUES ('DELETE JOB ' || OLD.JOB_NO,current_timestamp,old.MODIFY_BY);
END^

SET TERM ; ^

SET TERM ^ ;

CREATE TRIGGER JOB_AU FOR JOB
ACTIVE BEFORE UPDATE
POSITION 0
AS
BEGIN
  /* Trigger body */
   IF (NEW.JOB_NO <> OLD.JOB_NO)
   THEN INSERT INTO SQL_LOG (LOG_DESC,CREATE_DATE,CREATE_BY) VALUES ('UPDATE JOB ' || OLD.JOB_NO || '-->' || NEW.JOB_NO,NEW.MODIFY_DATE,NEW.MODIFY_BY);
END^

SET TERM ; ^