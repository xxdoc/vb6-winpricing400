2020/03/26 12:51:42  Project name <prjWINPricing400> : Module name <clsDatabaseMngr> :Routine name <GetRs> : Local error message <Run time error. Can't get record set. SQL1 -> SELECT  IVD.YYYYMM,CM.CUSTOMER_ID,CM.CUSTOMER_CODE,EMP.EMP_CODE,NM2.LONG_NAME SALE_NAME,CT.CSTTYPE_NAME,NM.LONG_NAME CUSTOMER_NAME,UG.PART_ITEM_ID,UG.FEATURE_ID,PI.PART_NO,FT.FEATURE_CODE,FT.FEATURE_CODE,FT.FEATURE_DESC,PI.PARCEL_TYPE,PI.PART_NO,PI.PART_DESC,PI.BARCODE_NO,PI.BILL_DESC,MR1.KEY_NAME ANIMAL_NAME,PT.PART_TYPE_NAME,SUM(UG.ITEM_AMOUNT) ITEM_AMOUNT,SUM(UG.TOTAL_PRICE) TOTAL_PRICE,SUM(UG.DISCOUNT_AMOUNT) DISCOUNT_AMOUNT ,SUM(UG.PACK_AMOUNT) PACK_AMOUNT,SUM(UG.PRICE_PER_PACK) PRICE_PER_PACK ,SUM(UG.AVG_PRICE) AVG_PRICE,SUM(UG.EXTRA_DISCOUNT) EXTRA_DISCOUNT ,SUM(LT.TOTAL_INCLUDE_PRICE)  TOTAL_INCLUDE_PRICE FROM DO_ITEM UG LEFT OUTER JOIN BILLING_DOC IVD ON (UG.DO_ID = IVD.BILLING_DOC_ID) LEFT OUTER JOIN ACCOUNT AC ON (IVD.ACCOUNT_ID = AC.ACCOUNT_ID) LEFT OUTER JOIN CUSTOMER CM ON (AC.CUSTOMER_ID = CM.CUSTOMER_ID) LEFT OUTER JOIN CUSTOMER_NAME CN ON (CM.CUSTOMER_ID = CN.CUSTOMER_ID)LEFT OUTER JOIN NAME NM ON (CN.NAME_ID = NM.NAME_ID) LEFT OUTER JOIN CUSTOMER_TYPE CT ON (CM.CUSTOMER_TYPE = CT.CSTTYPE_ID) LEFT OUTER JOIN EMPLOYEE EMP ON (CM.RESPONSE_BY = EMP.EMP_ID) LEFT OUTER JOIN EMPLOYEE_NAME EN ON (EN.EMP_ID = EMP.EMP_ID) LEFT OUTER JOIN NAME NM2 ON (NM2.NAME_ID = EN.NAME_ID) LEFT OUTER JOIN FEATURE FT ON (UG.FEATURE_ID = FT.FEATURE_ID) LEFT OUTER JOIN FEATURE_TYPE FTT ON (FT.FEATURE_TYPE = FTT.FEATURE_TYPE_ID) LEFT OUTER JOIN PART_ITEM PI ON (UG.PART_ITEM_ID = PI.PART_ITEM_ID) LEFT OUTER JOIN PART_TYPE PT ON (PI.PART_TYPE = PT.PART_TYPE_ID) LEFT OUTER JOIN MASTER_REF MR1 ON (MR1.KEY_ID = PI.ANIMAL_TYPE) LEFT OUTER JOIN LOT_ITEM LT ON (LT.INVENTORY_DOC_ID = IVD.INVENTORY_DOC_ID) AND (LT.LINK_ID = UG.LINK_ID) WHERE (CM.CUSTOMER_ID IS NOT NULL) AND (IVD.DOCUMENT_DATE >= '2020-03-01 00:00:00')AND (IVD.DOCUMENT_DATE <= '2020-03-31 23:59:59')AND (DOCUMENT_TYPE IN (1, 2)) AND ((PART_TYPE = 10)) GROUP BY IVD.YYYYMM,CM.CUSTOMER_ID,CM.CUSTOMER_CODE,EMP.EMP_CODE,NM2.LONG_NAME,CT.CSTTYPE_NAME,NM.LONG_NAME,UG.PART_ITEM_ID,UG.FEATURE_ID,FT.FEATURE_DESC ,PI.PART_NO,FT.FEATURE_CODE,FT.FEATURE_CODE,PI.PARCEL_TYPE,PI.PART_NO,PI.PART_DESC,PI.BARCODE_NO,PI.BILL_DESC,MR1.KEY_NAME,PT.PART_TYPE_NAME ORDER BY IVD.YYYYMM ASC,CM.CUSTOMER_CODE ASC, PI.PART_NO ASC, FT.FEATURE_CODE   ASC  SQL2 -> SELECT COUNT(*)  FROM DO_ITEM UG LEFT OUTER JOIN BILLING_DOC IVD ON (UG.DO_ID = IVD.BILLING_DOC_ID) LEFT OUTER JOIN ACCOUNT AC ON (IVD.ACCOUNT_ID = AC.ACCOUNT_ID) LEFT OUTER JOIN CUSTOMER CM ON (AC.CUSTOMER_ID = CM.CUSTOMER_ID) LEFT OUTER JOIN CUSTOMER_NAME CN ON (CM.CUSTOMER_ID = CN.CUSTOMER_ID)LEFT OUTER JOIN NAME NM ON (CN.NAME_ID = NM.NAME_ID) LEFT OUTER JOIN CUSTOMER_TYPE CT ON (CM.CUSTOMER_TYPE = CT.CSTTYPE_ID) LEFT OUTER JOIN EMPLOYEE EMP ON (CM.RESPONSE_BY = EMP.EMP_ID) LEFT OUTER JOIN EMPLOYEE_NAME EN ON (EN.EMP_ID = EMP.EMP_ID) LEFT OUTER JOIN NAME NM2 ON (NM2.NAME_ID = EN.NAME_ID) LEFT OUTER JOIN FEATURE FT ON (UG.FEATURE_ID = FT.FEATURE_ID) LEFT OUTER JOIN FEATURE_TYPE FTT ON (FT.FEATURE_TYPE = FTT.FEATURE_TYPE_ID) LEFT OUTER JOIN PART_ITEM PI ON (UG.PART_ITEM_ID = PI.PART_ITEM_ID) LEFT OUTER JOIN PART_TYPE PT ON (PI.PART_TYPE = PT.PART_TYPE_ID) LEFT OUTER JOIN MASTER_REF MR1 ON (MR1.KEY_ID = PI.ANIMAL_TYPE) LEFT OUTER JOIN LOT_ITEM LT ON (LT.INVENTORY_DOC_ID = IVD.INVENTORY_DOC_ID) AND (LT.LINK_ID = UG.LINK_ID) WHERE (CM.CUSTOMER_ID IS NOT NULL) AND (IVD.DOCUMENT_DATE >= '2020-03-01 00:00:00')AND (IVD.DOCUMENT_DATE <= '2020-03-31 23:59:59')AND (DOCUMENT_TYPE IN (1, 2)) AND ((PART_TYPE = 10)) > : System error message <Execute:
SQLCODE=-901:
Integer overflow.  The result of an integer operation caused the most significant bit of the result to carry.
IBCODE=335544779
>
2020/03/26 12:52:20  Project name <prjWINPricing400> : Module name <clsDatabaseMngr> :Routine name <GetRs> : Local error message <Run time error. Can't get record set. SQL1 -> SELECT  IVD.YYYYMM,CM.CUSTOMER_ID,CM.CUSTOMER_CODE,EMP.EMP_CODE,NM2.LONG_NAME SALE_NAME,CT.CSTTYPE_NAME,NM.LONG_NAME CUSTOMER_NAME,UG.PART_ITEM_ID,UG.FEATURE_ID,PI.PART_NO,FT.FEATURE_CODE,FT.FEATURE_CODE,FT.FEATURE_DESC,PI.PARCEL_TYPE,PI.PART_NO,PI.PART_DESC,PI.BARCODE_NO,PI.BILL_DESC,MR1.KEY_NAME ANIMAL_NAME,PT.PART_TYPE_NAME,SUM(UG.ITEM_AMOUNT) ITEM_AMOUNT,SUM(UG.TOTAL_PRICE) TOTAL_PRICE,SUM(UG.DISCOUNT_AMOUNT) DISCOUNT_AMOUNT ,SUM(UG.PACK_AMOUNT) PACK_AMOUNT,SUM(UG.PRICE_PER_PACK) PRICE_PER_PACK ,SUM(UG.AVG_PRICE) AVG_PRICE,SUM(UG.EXTRA_DISCOUNT) EXTRA_DISCOUNT ,SUM(LT.TOTAL_INCLUDE_PRICE)  TOTAL_INCLUDE_PRICE FROM DO_ITEM UG LEFT OUTER JOIN BILLING_DOC IVD ON (UG.DO_ID = IVD.BILLING_DOC_ID) LEFT OUTER JOIN ACCOUNT AC ON (IVD.ACCOUNT_ID = AC.ACCOUNT_ID) LEFT OUTER JOIN CUSTOMER CM ON (AC.CUSTOMER_ID = CM.CUSTOMER_ID) LEFT OUTER JOIN CUSTOMER_NAME CN ON (CM.CUSTOMER_ID = CN.CUSTOMER_ID)LEFT OUTER JOIN NAME NM ON (CN.NAME_ID = NM.NAME_ID) LEFT OUTER JOIN CUSTOMER_TYPE CT ON (CM.CUSTOMER_TYPE = CT.CSTTYPE_ID) LEFT OUTER JOIN EMPLOYEE EMP ON (CM.RESPONSE_BY = EMP.EMP_ID) LEFT OUTER JOIN EMPLOYEE_NAME EN ON (EN.EMP_ID = EMP.EMP_ID) LEFT OUTER JOIN NAME NM2 ON (NM2.NAME_ID = EN.NAME_ID) LEFT OUTER JOIN FEATURE FT ON (UG.FEATURE_ID = FT.FEATURE_ID) LEFT OUTER JOIN FEATURE_TYPE FTT ON (FT.FEATURE_TYPE = FTT.FEATURE_TYPE_ID) LEFT OUTER JOIN PART_ITEM PI ON (UG.PART_ITEM_ID = PI.PART_ITEM_ID) LEFT OUTER JOIN PART_TYPE PT ON (PI.PART_TYPE = PT.PART_TYPE_ID) LEFT OUTER JOIN MASTER_REF MR1 ON (MR1.KEY_ID = PI.ANIMAL_TYPE) LEFT OUTER JOIN LOT_ITEM LT ON (LT.INVENTORY_DOC_ID = IVD.INVENTORY_DOC_ID) AND (LT.LINK_ID = UG.LINK_ID) WHERE (CM.CUSTOMER_ID IS NOT NULL) AND (IVD.DOCUMENT_DATE >= '2020-03-01 00:00:00')AND (IVD.DOCUMENT_DATE <= '2020-03-31 23:59:59')AND (DOCUMENT_TYPE IN (1, 2)) AND ((PART_TYPE = 10)) GROUP BY IVD.YYYYMM,CM.CUSTOMER_ID,CM.CUSTOMER_CODE,EMP.EMP_CODE,NM2.LONG_NAME,CT.CSTTYPE_NAME,NM.LONG_NAME,UG.PART_ITEM_ID,UG.FEATURE_ID,FT.FEATURE_DESC ,PI.PART_NO,FT.FEATURE_CODE,FT.FEATURE_CODE,PI.PARCEL_TYPE,PI.PART_NO,PI.PART_DESC,PI.BARCODE_NO,PI.BILL_DESC,MR1.KEY_NAME,PT.PART_TYPE_NAME ORDER BY IVD.YYYYMM ASC,CM.CUSTOMER_CODE ASC, PI.PART_NO ASC, FT.FEATURE_CODE   ASC  SQL2 -> SELECT COUNT(*)  FROM DO_ITEM UG LEFT OUTER JOIN BILLING_DOC IVD ON (UG.DO_ID = IVD.BILLING_DOC_ID) LEFT OUTER JOIN ACCOUNT AC ON (IVD.ACCOUNT_ID = AC.ACCOUNT_ID) LEFT OUTER JOIN CUSTOMER CM ON (AC.CUSTOMER_ID = CM.CUSTOMER_ID) LEFT OUTER JOIN CUSTOMER_NAME CN ON (CM.CUSTOMER_ID = CN.CUSTOMER_ID)LEFT OUTER JOIN NAME NM ON (CN.NAME_ID = NM.NAME_ID) LEFT OUTER JOIN CUSTOMER_TYPE CT ON (CM.CUSTOMER_TYPE = CT.CSTTYPE_ID) LEFT OUTER JOIN EMPLOYEE EMP ON (CM.RESPONSE_BY = EMP.EMP_ID) LEFT OUTER JOIN EMPLOYEE_NAME EN ON (EN.EMP_ID = EMP.EMP_ID) LEFT OUTER JOIN NAME NM2 ON (NM2.NAME_ID = EN.NAME_ID) LEFT OUTER JOIN FEATURE FT ON (UG.FEATURE_ID = FT.FEATURE_ID) LEFT OUTER JOIN FEATURE_TYPE FTT ON (FT.FEATURE_TYPE = FTT.FEATURE_TYPE_ID) LEFT OUTER JOIN PART_ITEM PI ON (UG.PART_ITEM_ID = PI.PART_ITEM_ID) LEFT OUTER JOIN PART_TYPE PT ON (PI.PART_TYPE = PT.PART_TYPE_ID) LEFT OUTER JOIN MASTER_REF MR1 ON (MR1.KEY_ID = PI.ANIMAL_TYPE) LEFT OUTER JOIN LOT_ITEM LT ON (LT.INVENTORY_DOC_ID = IVD.INVENTORY_DOC_ID) AND (LT.LINK_ID = UG.LINK_ID) WHERE (CM.CUSTOMER_ID IS NOT NULL) AND (IVD.DOCUMENT_DATE >= '2020-03-01 00:00:00')AND (IVD.DOCUMENT_DATE <= '2020-03-31 23:59:59')AND (DOCUMENT_TYPE IN (1, 2)) AND ((PART_TYPE = 10)) > : System error message <Execute:
SQLCODE=-901:
Integer overflow.  The result of an integer operation caused the most significant bit of the result to carry.
IBCODE=335544779
>
2020/03/26 13:11:38  Project name <prjWINPricing400> : Module name <clsDatabaseMngr> :Routine name <GetRs> : Local error message <Run time error. Can't get record set. SQL1 -> SELECT  IVD.YYYYMM,CM.CUSTOMER_ID,CM.CUSTOMER_CODE,EMP.EMP_CODE,NM2.LONG_NAME SALE_NAME,CT.CSTTYPE_NAME,NM.LONG_NAME CUSTOMER_NAME,UG.PART_ITEM_ID,UG.FEATURE_ID,PI.PART_NO,FT.FEATURE_CODE,FT.FEATURE_CODE,FT.FEATURE_DESC,PI.PARCEL_TYPE,PI.PART_NO,PI.PART_DESC,PI.BARCODE_NO,PI.BILL_DESC,MR1.KEY_NAME ANIMAL_NAME,PT.PART_TYPE_NAME,SUM(UG.ITEM_AMOUNT) ITEM_AMOUNT,SUM(UG.TOTAL_PRICE) TOTAL_PRICE,SUM(UG.DISCOUNT_AMOUNT) DISCOUNT_AMOUNT ,SUM(UG.PACK_AMOUNT) PACK_AMOUNT,SUM(UG.PRICE_PER_PACK) PRICE_PER_PACK ,SUM(UG.AVG_PRICE) AVG_PRICE,SUM(UG.EXTRA_DISCOUNT) EXTRA_DISCOUNT ,SUM(LT.TOTAL_INCLUDE_PRICE)  TOTAL_INCLUDE_PRICE FROM DO_ITEM UG LEFT OUTER JOIN BILLING_DOC IVD ON (UG.DO_ID = IVD.BILLING_DOC_ID) LEFT OUTER JOIN ACCOUNT AC ON (IVD.ACCOUNT_ID = AC.ACCOUNT_ID) LEFT OUTER JOIN CUSTOMER CM ON (AC.CUSTOMER_ID = CM.CUSTOMER_ID) LEFT OUTER JOIN CUSTOMER_NAME CN ON (CM.CUSTOMER_ID = CN.CUSTOMER_ID)LEFT OUTER JOIN NAME NM ON (CN.NAME_ID = NM.NAME_ID) LEFT OUTER JOIN CUSTOMER_TYPE CT ON (CM.CUSTOMER_TYPE = CT.CSTTYPE_ID) LEFT OUTER JOIN EMPLOYEE EMP ON (CM.RESPONSE_BY = EMP.EMP_ID) LEFT OUTER JOIN EMPLOYEE_NAME EN ON (EN.EMP_ID = EMP.EMP_ID) LEFT OUTER JOIN NAME NM2 ON (NM2.NAME_ID = EN.NAME_ID) LEFT OUTER JOIN FEATURE FT ON (UG.FEATURE_ID = FT.FEATURE_ID) LEFT OUTER JOIN FEATURE_TYPE FTT ON (FT.FEATURE_TYPE = FTT.FEATURE_TYPE_ID) LEFT OUTER JOIN PART_ITEM PI ON (UG.PART_ITEM_ID = PI.PART_ITEM_ID) LEFT OUTER JOIN PART_TYPE PT ON (PI.PART_TYPE = PT.PART_TYPE_ID) LEFT OUTER JOIN MASTER_REF MR1 ON (MR1.KEY_ID = PI.ANIMAL_TYPE) LEFT OUTER JOIN LOT_ITEM LT ON (LT.INVENTORY_DOC_ID = IVD.INVENTORY_DOC_ID) AND (LT.LINK_ID = UG.LINK_ID) WHERE (CM.CUSTOMER_ID IS NOT NULL) AND (IVD.DOCUMENT_DATE >= '2020-03-01 00:00:00')AND (IVD.DOCUMENT_DATE <= '2020-03-31 23:59:59')AND (DOCUMENT_TYPE IN (1, 2)) AND ((PART_TYPE = 10)) GROUP BY IVD.YYYYMM,CM.CUSTOMER_ID,CM.CUSTOMER_CODE,EMP.EMP_CODE,NM2.LONG_NAME,CT.CSTTYPE_NAME,NM.LONG_NAME,UG.PART_ITEM_ID,UG.FEATURE_ID,FT.FEATURE_DESC ,PI.PART_NO,FT.FEATURE_CODE,FT.FEATURE_CODE,PI.PARCEL_TYPE,PI.PART_NO,PI.PART_DESC,PI.BARCODE_NO,PI.BILL_DESC,MR1.KEY_NAME,PT.PART_TYPE_NAME ORDER BY IVD.YYYYMM ASC,CM.CUSTOMER_CODE ASC, PI.PART_NO ASC, FT.FEATURE_CODE   ASC  SQL2 -> SELECT COUNT(*)  FROM DO_ITEM UG LEFT OUTER JOIN BILLING_DOC IVD ON (UG.DO_ID = IVD.BILLING_DOC_ID) LEFT OUTER JOIN ACCOUNT AC ON (IVD.ACCOUNT_ID = AC.ACCOUNT_ID) LEFT OUTER JOIN CUSTOMER CM ON (AC.CUSTOMER_ID = CM.CUSTOMER_ID) LEFT OUTER JOIN CUSTOMER_NAME CN ON (CM.CUSTOMER_ID = CN.CUSTOMER_ID)LEFT OUTER JOIN NAME NM ON (CN.NAME_ID = NM.NAME_ID) LEFT OUTER JOIN CUSTOMER_TYPE CT ON (CM.CUSTOMER_TYPE = CT.CSTTYPE_ID) LEFT OUTER JOIN EMPLOYEE EMP ON (CM.RESPONSE_BY = EMP.EMP_ID) LEFT OUTER JOIN EMPLOYEE_NAME EN ON (EN.EMP_ID = EMP.EMP_ID) LEFT OUTER JOIN NAME NM2 ON (NM2.NAME_ID = EN.NAME_ID) LEFT OUTER JOIN FEATURE FT ON (UG.FEATURE_ID = FT.FEATURE_ID) LEFT OUTER JOIN FEATURE_TYPE FTT ON (FT.FEATURE_TYPE = FTT.FEATURE_TYPE_ID) LEFT OUTER JOIN PART_ITEM PI ON (UG.PART_ITEM_ID = PI.PART_ITEM_ID) LEFT OUTER JOIN PART_TYPE PT ON (PI.PART_TYPE = PT.PART_TYPE_ID) LEFT OUTER JOIN MASTER_REF MR1 ON (MR1.KEY_ID = PI.ANIMAL_TYPE) LEFT OUTER JOIN LOT_ITEM LT ON (LT.INVENTORY_DOC_ID = IVD.INVENTORY_DOC_ID) AND (LT.LINK_ID = UG.LINK_ID) WHERE (CM.CUSTOMER_ID IS NOT NULL) AND (IVD.DOCUMENT_DATE >= '2020-03-01 00:00:00')AND (IVD.DOCUMENT_DATE <= '2020-03-31 23:59:59')AND (DOCUMENT_TYPE IN (1, 2)) AND ((PART_TYPE = 10)) > : System error message <Execute:
SQLCODE=-901:
Integer overflow.  The result of an integer operation caused the most significant bit of the result to carry.
IBCODE=335544779
>
2020/03/26 13:12:49  Project name <prjWINPricing400> : Module name <clsDatabaseMngr> :Routine name <GetRs> : Local error message <Run time error. Can't get record set. SQL1 -> SELECT  IVD.YYYYMM,CM.CUSTOMER_ID,CM.CUSTOMER_CODE,EMP.EMP_CODE,NM2.LONG_NAME SALE_NAME,CT.CSTTYPE_NAME,NM.LONG_NAME CUSTOMER_NAME,UG.PART_ITEM_ID,UG.FEATURE_ID,PI.PART_NO,FT.FEATURE_CODE,FT.FEATURE_CODE,FT.FEATURE_DESC,PI.PARCEL_TYPE,PI.PART_NO,PI.PART_DESC,PI.BARCODE_NO,PI.BILL_DESC,MR1.KEY_NAME ANIMAL_NAME,PT.PART_TYPE_NAME,SUM(UG.ITEM_AMOUNT) ITEM_AMOUNT,SUM(UG.TOTAL_PRICE) TOTAL_PRICE,SUM(UG.DISCOUNT_AMOUNT) DISCOUNT_AMOUNT ,SUM(UG.PACK_AMOUNT) PACK_AMOUNT,SUM(UG.PRICE_PER_PACK) PRICE_PER_PACK ,SUM(UG.AVG_PRICE) AVG_PRICE,SUM(UG.EXTRA_DISCOUNT) EXTRA_DISCOUNT ,SUM(LT.TOTAL_INCLUDE_PRICE)  TOTAL_INCLUDE_PRICE FROM DO_ITEM UG LEFT OUTER JOIN BILLING_DOC IVD ON (UG.DO_ID = IVD.BILLING_DOC_ID) LEFT OUTER JOIN ACCOUNT AC ON (IVD.ACCOUNT_ID = AC.ACCOUNT_ID) LEFT OUTER JOIN CUSTOMER CM ON (AC.CUSTOMER_ID = CM.CUSTOMER_ID) LEFT OUTER JOIN CUSTOMER_NAME CN ON (CM.CUSTOMER_ID = CN.CUSTOMER_ID)LEFT OUTER JOIN NAME NM ON (CN.NAME_ID = NM.NAME_ID) LEFT OUTER JOIN CUSTOMER_TYPE CT ON (CM.CUSTOMER_TYPE = CT.CSTTYPE_ID) LEFT OUTER JOIN EMPLOYEE EMP ON (CM.RESPONSE_BY = EMP.EMP_ID) LEFT OUTER JOIN EMPLOYEE_NAME EN ON (EN.EMP_ID = EMP.EMP_ID) LEFT OUTER JOIN NAME NM2 ON (NM2.NAME_ID = EN.NAME_ID) LEFT OUTER JOIN FEATURE FT ON (UG.FEATURE_ID = FT.FEATURE_ID) LEFT OUTER JOIN FEATURE_TYPE FTT ON (FT.FEATURE_TYPE = FTT.FEATURE_TYPE_ID) LEFT OUTER JOIN PART_ITEM PI ON (UG.PART_ITEM_ID = PI.PART_ITEM_ID) LEFT OUTER JOIN PART_TYPE PT ON (PI.PART_TYPE = PT.PART_TYPE_ID) LEFT OUTER JOIN MASTER_REF MR1 ON (MR1.KEY_ID = PI.ANIMAL_TYPE) LEFT OUTER JOIN LOT_ITEM LT ON (LT.INVENTORY_DOC_ID = IVD.INVENTORY_DOC_ID) AND (LT.LINK_ID = UG.LINK_ID) WHERE (CM.CUSTOMER_ID IS NOT NULL) AND (IVD.DOCUMENT_DATE >= '2020-03-01 00:00:00')AND (IVD.DOCUMENT_DATE <= '2020-03-31 23:59:59')AND (DOCUMENT_TYPE IN (1, 2)) AND ((PART_TYPE = 10)) GROUP BY IVD.YYYYMM,CM.CUSTOMER_ID,CM.CUSTOMER_CODE,EMP.EMP_CODE,NM2.LONG_NAME,CT.CSTTYPE_NAME,NM.LONG_NAME,UG.PART_ITEM_ID,UG.FEATURE_ID,FT.FEATURE_DESC ,PI.PART_NO,FT.FEATURE_CODE,FT.FEATURE_CODE,PI.PARCEL_TYPE,PI.PART_NO,PI.PART_DESC,PI.BARCODE_NO,PI.BILL_DESC,MR1.KEY_NAME,PT.PART_TYPE_NAME ORDER BY IVD.YYYYMM ASC,CM.CUSTOMER_CODE ASC, PI.PART_NO ASC, FT.FEATURE_CODE   ASC  SQL2 -> SELECT COUNT(*)  FROM DO_ITEM UG LEFT OUTER JOIN BILLING_DOC IVD ON (UG.DO_ID = IVD.BILLING_DOC_ID) LEFT OUTER JOIN ACCOUNT AC ON (IVD.ACCOUNT_ID = AC.ACCOUNT_ID) LEFT OUTER JOIN CUSTOMER CM ON (AC.CUSTOMER_ID = CM.CUSTOMER_ID) LEFT OUTER JOIN CUSTOMER_NAME CN ON (CM.CUSTOMER_ID = CN.CUSTOMER_ID)LEFT OUTER JOIN NAME NM ON (CN.NAME_ID = NM.NAME_ID) LEFT OUTER JOIN CUSTOMER_TYPE CT ON (CM.CUSTOMER_TYPE = CT.CSTTYPE_ID) LEFT OUTER JOIN EMPLOYEE EMP ON (CM.RESPONSE_BY = EMP.EMP_ID) LEFT OUTER JOIN EMPLOYEE_NAME EN ON (EN.EMP_ID = EMP.EMP_ID) LEFT OUTER JOIN NAME NM2 ON (NM2.NAME_ID = EN.NAME_ID) LEFT OUTER JOIN FEATURE FT ON (UG.FEATURE_ID = FT.FEATURE_ID) LEFT OUTER JOIN FEATURE_TYPE FTT ON (FT.FEATURE_TYPE = FTT.FEATURE_TYPE_ID) LEFT OUTER JOIN PART_ITEM PI ON (UG.PART_ITEM_ID = PI.PART_ITEM_ID) LEFT OUTER JOIN PART_TYPE PT ON (PI.PART_TYPE = PT.PART_TYPE_ID) LEFT OUTER JOIN MASTER_REF MR1 ON (MR1.KEY_ID = PI.ANIMAL_TYPE) LEFT OUTER JOIN LOT_ITEM LT ON (LT.INVENTORY_DOC_ID = IVD.INVENTORY_DOC_ID) AND (LT.LINK_ID = UG.LINK_ID) WHERE (CM.CUSTOMER_ID IS NOT NULL) AND (IVD.DOCUMENT_DATE >= '2020-03-01 00:00:00')AND (IVD.DOCUMENT_DATE <= '2020-03-31 23:59:59')AND (DOCUMENT_TYPE IN (1, 2)) AND ((PART_TYPE = 10)) > : System error message <Execute:
SQLCODE=-901:
Integer overflow.  The result of an integer operation caused the most significant bit of the result to carry.
IBCODE=335544779
>
2020/03/26 15:10:32  Project name <prjWINPricing400> : Module name <frmReport> :Routine name <Form_Load> : Local error message <Error(genDoc)3704 : Operation is not allowed when the object is closed.> : System error message <Type mismatch , LoadBillTransportByBillingDocNo , KEY=  , KeyType=1>
2020/03/26 15:10:44  Project name <prjWINPricing400> : Module name <frmReport> :Routine name <Form_Load> : Local error message <Error(genDoc)3704 : Operation is not allowed when the object is closed.> : System error message <Type mismatch , LoadBillTransportByBillingDocNo , KEY=  , KeyType=1>
